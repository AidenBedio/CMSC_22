/////////////////////////////////////////////////////////////////////////////////////////Bedio Programming (c)//////////////
//////////////////////////////////////////////////////////////////////////////////////////10/30/16/////////////////////////
import java.awt.Color;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.util.LinkedList;
import java.util.List;

public class MiniCalc extends javax.swing.JFrame {

    private String textString = "0";
    
    private String answer = "0";
    private List<String> equation = new LinkedList<>();
    /**
     * Creates new form MiniCalc
     */
    public MiniCalc() {

        initComponents();
        divideBtn.setBackground(Color.getHSBColor(24, 65, 49));
        multiplyBtn.setBackground(Color.getHSBColor(24, 65, 49));
        plusBtn.setBackground(Color.getHSBColor(24, 65, 49));
        minusBtn.setBackground(Color.getHSBColor(24, 65, 49));
        equalsBtn.setBackground(Color.getHSBColor(24, 65, 49));
        setTitle("Calculator");
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textPnl = new javax.swing.JPanel();
        ansField = new javax.swing.JTextField();
        btnPnl = new javax.swing.JPanel();
        ACBtn = new javax.swing.JButton();
        CBtn = new javax.swing.JButton();
        moduloBtn = new javax.swing.JButton();
        divideBtn = new javax.swing.JButton();
        sevenBtn = new javax.swing.JButton();
        eightBtn = new javax.swing.JButton();
        nineBtn = new javax.swing.JButton();
        multiplyBtn = new javax.swing.JButton();
        fourBtn = new javax.swing.JButton();
        fiveBtn = new javax.swing.JButton();
        sixBtn = new javax.swing.JButton();
        minusBtn = new javax.swing.JButton();
        oneBtn = new javax.swing.JButton();
        twoBtn = new javax.swing.JButton();
        threeBtn = new javax.swing.JButton();
        plusBtn = new javax.swing.JButton();
        zeroBtn = new javax.swing.JButton();
        decimalBtn = new javax.swing.JButton();
        plusMinusBtn = new javax.swing.JButton();
        equalsBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(420, 600));
        setMinimumSize(new java.awt.Dimension(420, 600));
        setPreferredSize(new java.awt.Dimension(420, 600));
        setSize(new java.awt.Dimension(420, 600));

        textPnl.setMaximumSize(new java.awt.Dimension(100, 100));
        textPnl.setPreferredSize(new java.awt.Dimension(100, 100));

        ansField.setEditable(false);
        ansField.setFont(new java.awt.Font("Dialog", 0, 48)); // NOI18N
        ansField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ansField.setText("0");
        ansField.setMaximumSize(new java.awt.Dimension(100, 100));
        ansField.setMinimumSize(new java.awt.Dimension(100, 100));
        ansField.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout textPnlLayout = new javax.swing.GroupLayout(textPnl);
        textPnl.setLayout(textPnlLayout);
        textPnlLayout.setHorizontalGroup(
            textPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ansField, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        textPnlLayout.setVerticalGroup(
            textPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ansField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnPnl.setMaximumSize(new java.awt.Dimension(390, 440));
        btnPnl.setMinimumSize(new java.awt.Dimension(390, 440));
        btnPnl.setPreferredSize(new java.awt.Dimension(390, 440));
        btnPnl.setLayout(new java.awt.GridLayout(5, 4));

        ACBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        ACBtn.setText("AC");
        ACBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACBtnActionPerformed(evt);
            }
        });
        btnPnl.add(ACBtn);

        CBtn.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        CBtn.setText("C");
        CBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBtnActionPerformed(evt);
            }
        });
        btnPnl.add(CBtn);

        moduloBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        moduloBtn.setText("%");
        moduloBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moduloBtnActionPerformed(evt);
            }
        });
        btnPnl.add(moduloBtn);

        divideBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        divideBtn.setText("รท ");
        divideBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideBtnActionPerformed(evt);
            }
        });
        btnPnl.add(divideBtn);

        sevenBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        sevenBtn.setText("7");
        sevenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenBtnActionPerformed(evt);
            }
        });
        btnPnl.add(sevenBtn);

        eightBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        eightBtn.setText("8");
        eightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightBtnActionPerformed(evt);
            }
        });
        btnPnl.add(eightBtn);

        nineBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        nineBtn.setText("9");
        nineBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineBtnActionPerformed(evt);
            }
        });
        btnPnl.add(nineBtn);

        multiplyBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        multiplyBtn.setText("x");
        multiplyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyBtnActionPerformed(evt);
            }
        });
        btnPnl.add(multiplyBtn);

        fourBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        fourBtn.setText("4");
        fourBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourBtnActionPerformed(evt);
            }
        });
        btnPnl.add(fourBtn);

        fiveBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        fiveBtn.setText("5");
        fiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveBtnActionPerformed(evt);
            }
        });
        btnPnl.add(fiveBtn);

        sixBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        sixBtn.setText("6");
        sixBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixBtnActionPerformed(evt);
            }
        });
        btnPnl.add(sixBtn);

        minusBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        minusBtn.setText("-");
        minusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusBtnActionPerformed(evt);
            }
        });
        btnPnl.add(minusBtn);

        oneBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        oneBtn.setText("1");
        oneBtn.setMaximumSize(new java.awt.Dimension(60, 32));
        oneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneBtnActionPerformed(evt);
            }
        });
        btnPnl.add(oneBtn);

        twoBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        twoBtn.setText("2");
        twoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoBtnActionPerformed(evt);
            }
        });
        btnPnl.add(twoBtn);

        threeBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        threeBtn.setText("3");
        threeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeBtnActionPerformed(evt);
            }
        });
        btnPnl.add(threeBtn);

        plusBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        plusBtn.setText("+");
        plusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusBtnActionPerformed(evt);
            }
        });
        btnPnl.add(plusBtn);

        zeroBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        zeroBtn.setText("0");
        zeroBtn.setMaximumSize(new java.awt.Dimension(60, 32));
        zeroBtn.setMinimumSize(new java.awt.Dimension(60, 32));
        zeroBtn.setPreferredSize(new java.awt.Dimension(60, 32));
        zeroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroBtnActionPerformed(evt);
            }
        });
        btnPnl.add(zeroBtn);

        decimalBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        decimalBtn.setText(".");
        decimalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalBtnActionPerformed(evt);
            }
        });
        btnPnl.add(decimalBtn);

        plusMinusBtn.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        plusMinusBtn.setText("+/-");
        plusMinusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusMinusBtnActionPerformed(evt);
            }
        });
        btnPnl.add(plusMinusBtn);

        equalsBtn.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        equalsBtn.setText("=");
        equalsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsBtnActionPerformed(evt);
            }
        });
        btnPnl.add(equalsBtn);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sixBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixBtnActionPerformed
  
        ifNumberIsPressed('6');      
    }//GEN-LAST:event_sixBtnActionPerformed

    private void sevenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenBtnActionPerformed
 
         ifNumberIsPressed('7');
    }//GEN-LAST:event_sevenBtnActionPerformed

    private void eightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightBtnActionPerformed

         ifNumberIsPressed('8');
    }//GEN-LAST:event_eightBtnActionPerformed

    private void nineBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineBtnActionPerformed

         ifNumberIsPressed('9');
    }//GEN-LAST:event_nineBtnActionPerformed

    private void fourBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourBtnActionPerformed
   
         ifNumberIsPressed('4');
    }//GEN-LAST:event_fourBtnActionPerformed

    private void fiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveBtnActionPerformed

        ifNumberIsPressed('5');
    }//GEN-LAST:event_fiveBtnActionPerformed

    private void oneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneBtnActionPerformed
        // TODO add your handling code here:
         ifNumberIsPressed('1');
    }//GEN-LAST:event_oneBtnActionPerformed

    private void twoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoBtnActionPerformed

         ifNumberIsPressed('2');
    }//GEN-LAST:event_twoBtnActionPerformed

    private void threeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeBtnActionPerformed

         ifNumberIsPressed('3');
    }//GEN-LAST:event_threeBtnActionPerformed

    private void zeroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroBtnActionPerformed

         ifNumberIsPressed('0');
    }//GEN-LAST:event_zeroBtnActionPerformed

    private void decimalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalBtnActionPerformed

        textString = textString+".";
        ansField.setText(textString);
    }//GEN-LAST:event_decimalBtnActionPerformed

    private void moduloBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moduloBtnActionPerformed
        // TODO add your handling code here:
        errorChecker('%');
    }//GEN-LAST:event_moduloBtnActionPerformed

    private void divideBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideBtnActionPerformed
  
         errorChecker('/');         
    }//GEN-LAST:event_divideBtnActionPerformed

    private void multiplyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyBtnActionPerformed

        errorChecker('x');
    }//GEN-LAST:event_multiplyBtnActionPerformed

    private void minusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusBtnActionPerformed
  
        errorChecker('-');
    }//GEN-LAST:event_minusBtnActionPerformed

    private void plusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusBtnActionPerformed

        errorChecker('+');
    }//GEN-LAST:event_plusBtnActionPerformed

    private void plusMinusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusMinusBtnActionPerformed

        if (textString.charAt(0) == '-'){
            textString = textString.substring(1,textString.length());
        }
        else{
            textString = "-"+textString;
        }
        ansField.setText(textString);
    }//GEN-LAST:event_plusMinusBtnActionPerformed

    private void ACBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACBtnActionPerformed

        textString = "0";
        ansField.setText(textString);
    }//GEN-LAST:event_ACBtnActionPerformed

    private void CBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBtnActionPerformed

        if (textString.length() != 0){
            textString = textString.substring(0,textString.length()-1);
        }
        if (textString.length() == 0){
            textString = "0";
        }
        ansField.setText(textString);
    }//GEN-LAST:event_CBtnActionPerformed

    private void equalsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsBtnActionPerformed
        
        if (textString.length() == 1 && textString.charAt(0) == '0'){
            textString = "0";
        }
        
        else if (textString.charAt(textString.length()-1) == '%' 
                || textString.charAt(textString.length()-1) == '/'
                || textString.charAt(textString.length()-1) == '+'
                || textString.charAt(textString.length()-1) == '-'
                || textString.charAt(textString.length()-1) == 'x'){
            ansField.setText("Syntax Error");
            textString = "0";
        }
        else{
            parser(textString);
            answer = solve(equation);
            textString = answer;
            equation.clear();
            ansField.setText(textString);
        }       
        
    }//GEN-LAST:event_equalsBtnActionPerformed
    
    public void errorChecker(char a){
        if (textString.length() == 1 && textString.charAt(0) == '0'){
            textString = "0";
        }
        else if (textString.charAt(textString.length()-1) == '%' 
                || textString.charAt(textString.length()-1) == '/'
                || textString.charAt(textString.length()-1) == '+'
                || textString.charAt(textString.length()-1) == '-'
                || textString.charAt(textString.length()-1) == 'x'){
            textString = textString.substring(0,textString.length()-1);
            textString = textString+a;
            
        }
        else{
            textString = textString+a;
        }
        ansField.setText(textString);
    }
    
    public void ifNumberIsPressed(char a){
        if (textString.length() == 1 && textString.charAt(0) == '0'){
            textString = "";
        }
        textString = textString+a;
        ansField.setText(textString);
    }
    
    public void parser(String eq){
        
        String line;
        int min = 0;
        for (int i = 1; i < eq.length(); i++){
            
            if (eq.charAt(i) == '+' || eq.charAt(i) == '-'
                    || eq.charAt(i) == 'x' || eq.charAt(i) == '/'
                    || eq.charAt(i) == '%'){
                
                line = eq.substring(min, i);
                equation.add(line);
                equation.add(Character.toString(eq.charAt(i)));
                min = i + 1;
            }          
        }
        
        line = eq.substring(min, eq.length());
        equation.add(line);
    }
    
    public String solve(List<String> a){
        
        MathContext mc = new MathContext(3, RoundingMode.HALF_UP);
        
        while (a.size() > 1){
            
            BigDecimal prev;
            BigDecimal newBigInt;
            String collapseNode;
            
            for (int i = 0; i < a.size(); i++){
                if (a.get(i).equals("%")){
                    prev = new BigDecimal(a.get(i-1));
                    BigDecimal temp = new BigDecimal(a.get(i+1));
                    newBigInt = prev.multiply(temp.divide(new BigDecimal("100")),mc);
                    collapseNode = newBigInt.stripTrailingZeros().toPlainString();
                    System.out.println("Bacons"+collapseNode);
                    a.add(i, collapseNode);
                    a.remove(i+1);
                    a.remove(i-1);
                    a.remove(i);  
                }
            }
            
            for (int i = 0; i < a.size(); i++){
                if (a.get(i).equals("x")){
                   
                    prev = new BigDecimal(a.get(i-1));
                    newBigInt = prev.multiply(new BigDecimal(a.get(i+1)),mc);
                    collapseNode = newBigInt.stripTrailingZeros().toPlainString();
                    a.add(i, collapseNode);
                    a.remove(i+1);
                    a.remove(i-1);
                    a.remove(i);                
                }
            }
            
            for (int i = 0; i < a.size(); i++){
                
                if (a.get(i).equals("/")){
                    prev = new BigDecimal(a.get(i-1));
                    newBigInt = prev.divide(new BigDecimal(a.get(i+1)),mc);
                    collapseNode = newBigInt.stripTrailingZeros().toPlainString();
                    a.add(i, collapseNode);
                    a.remove(i+1);
                    a.remove(i-1);
                    a.remove(i);                
                }
            }
            
            for (int i = 0; i < a.size(); i++){
                
                if (a.get(i).equals("+")){
                    prev = new BigDecimal(a.get(i-1));
                    newBigInt = prev.add(new BigDecimal(a.get(i+1)),mc);
                    collapseNode = newBigInt.stripTrailingZeros().toPlainString();
                    a.add(i, collapseNode);
                    a.remove(i+1);
                    a.remove(i-1);
                    a.remove(i);                
                }
            }
            
            for (int i = 0; i < a.size(); i++){
                
                if (a.get(i).equals("-")){
                    prev = new BigDecimal(a.get(i-1));
                    newBigInt = prev.subtract(new BigDecimal(a.get(i+1)),mc);
                    collapseNode = newBigInt.stripTrailingZeros().toPlainString();
                    a.add(i, collapseNode);
                    a.remove(i+1);
                    a.remove(i-1);
                    a.remove(i);                
                }
            }
            
            
            
            
            
        }
        
        String ansString = a.get(0);
        return ansString;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiniCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiniCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiniCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiniCalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiniCalc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ACBtn;
    private javax.swing.JButton CBtn;
    private javax.swing.JTextField ansField;
    private javax.swing.JPanel btnPnl;
    private javax.swing.JButton decimalBtn;
    private javax.swing.JButton divideBtn;
    private javax.swing.JButton eightBtn;
    private javax.swing.JButton equalsBtn;
    private javax.swing.JButton fiveBtn;
    private javax.swing.JButton fourBtn;
    private javax.swing.JButton minusBtn;
    private javax.swing.JButton moduloBtn;
    private javax.swing.JButton multiplyBtn;
    private javax.swing.JButton nineBtn;
    private javax.swing.JButton oneBtn;
    private javax.swing.JButton plusBtn;
    private javax.swing.JButton plusMinusBtn;
    private javax.swing.JButton sevenBtn;
    private javax.swing.JButton sixBtn;
    private javax.swing.JPanel textPnl;
    private javax.swing.JButton threeBtn;
    private javax.swing.JButton twoBtn;
    private javax.swing.JButton zeroBtn;
    // End of variables declaration//GEN-END:variables
}
